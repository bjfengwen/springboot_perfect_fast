<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itstyle.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.itstyle.entity.User">
    <id column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="avatar_path" jdbcType="VARCHAR" property="avatarPath" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="country_code" jdbcType="VARCHAR" property="countryCode" />
    <result column="user_mail" jdbcType="VARCHAR" property="userMail" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="find_me_by_phone" jdbcType="TINYINT" property="findMeByPhone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="max_amount" jdbcType="INTEGER" property="maxAmount" />
    <result column="use_amount" jdbcType="INTEGER" property="useAmount" />
    <result column="max_device_amount" jdbcType="INTEGER" property="maxDeviceAmount" />
    <result column="use_device_amount" jdbcType="INTEGER" property="useDeviceAmount" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, nickname, username, password, salt, avatar_path, phone_num, country_code, 
    user_mail, user_status, find_me_by_phone, create_time, update_time, max_amount, use_amount, 
    max_device_amount, use_device_amount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.itstyle.entity.User">
    insert into t_user (userid, nickname, username, 
      password, salt, avatar_path, 
      phone_num, country_code, user_mail, 
      user_status, find_me_by_phone, create_time, 
      update_time, max_amount, use_amount, 
      max_device_amount, use_device_amount)
    values (#{userid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{avatarPath,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{countryCode,jdbcType=VARCHAR}, #{userMail,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=TINYINT}, #{findMeByPhone,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{maxAmount,jdbcType=INTEGER}, #{useAmount,jdbcType=INTEGER}, 
      #{maxDeviceAmount,jdbcType=INTEGER}, #{useDeviceAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.itstyle.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="avatarPath != null">
        avatar_path,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="countryCode != null">
        country_code,
      </if>
      <if test="userMail != null">
        user_mail,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="findMeByPhone != null">
        find_me_by_phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="maxAmount != null">
        max_amount,
      </if>
      <if test="useAmount != null">
        use_amount,
      </if>
      <if test="maxDeviceAmount != null">
        max_device_amount,
      </if>
      <if test="useDeviceAmount != null">
        use_device_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="avatarPath != null">
        #{avatarPath,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null">
        #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="userMail != null">
        #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="findMeByPhone != null">
        #{findMeByPhone,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maxAmount != null">
        #{maxAmount,jdbcType=INTEGER},
      </if>
      <if test="useAmount != null">
        #{useAmount,jdbcType=INTEGER},
      </if>
      <if test="maxDeviceAmount != null">
        #{maxDeviceAmount,jdbcType=INTEGER},
      </if>
      <if test="useDeviceAmount != null">
        #{useDeviceAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.itstyle.entity.User">
    update t_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="avatarPath != null">
        avatar_path = #{avatarPath,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null">
        country_code = #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="userMail != null">
        user_mail = #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="findMeByPhone != null">
        find_me_by_phone = #{findMeByPhone,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maxAmount != null">
        max_amount = #{maxAmount,jdbcType=INTEGER},
      </if>
      <if test="useAmount != null">
        use_amount = #{useAmount,jdbcType=INTEGER},
      </if>
      <if test="maxDeviceAmount != null">
        max_device_amount = #{maxDeviceAmount,jdbcType=INTEGER},
      </if>
      <if test="useDeviceAmount != null">
        use_device_amount = #{useDeviceAmount,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itstyle.entity.User">
    update t_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      avatar_path = #{avatarPath,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      country_code = #{countryCode,jdbcType=VARCHAR},
      user_mail = #{userMail,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT},
      find_me_by_phone = #{findMeByPhone,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      max_amount = #{maxAmount,jdbcType=INTEGER},
      use_amount = #{useAmount,jdbcType=INTEGER},
      max_device_amount = #{maxDeviceAmount,jdbcType=INTEGER},
      use_device_amount = #{useDeviceAmount,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 自定义 -->
  <select id="getByPhoneNum" parameterType="string" resultMap="BaseResultMap">
	  SELECT
		u.userid,
		u.username,
		u.nickname,
		u.phone_num,
		u.avatar_path,
		u.country_code,
		u.user_mail,
		u.user_status,
		u.create_time,
		u.update_time,
		u.find_me_by_phone,
		u.max_amount, 
		u.use_amount, 
    	u.max_device_amount, 
    	use_device_amount
	FROM
		t_user AS u
	<where>
		u.user_status = "0"
		AND u.phone_num = #{phoneNum};
	</where>
  </select>
  
  <select id="getById" parameterType="string" resultMap="BaseResultMap">
  	SELECT
		u.userid,
		u.username,
		u.nickname,
		u.phone_num,
		u.avatar_path,
		u.country_code,
		u.user_mail,
		u.user_status,
		u.create_time,
		u.update_time,
		u.find_me_by_phone,
		u.max_amount, 
		u.use_amount, 
    	u.max_device_amount, 
    	use_device_amount
	FROM
		t_user AS u
	<where>
		u.user_status = "0"
		AND u.userid = #{userid};
	</where>
  </select>
  <!-- 批量查询用户 -->
  <select id="listUserByIds" parameterType="list" resultMap="BaseResultMap">
  	SELECT
		u.userid,
		u.username,
		u.nickname,
		u.phone_num,
		u.avatar_path,
		u.country_code,
		u.user_mail,
		u.user_status,
		u.create_time,
		u.update_time,
		u.find_me_by_phone,
		u.max_amount, 
		u.use_amount, 
    	u.max_device_amount, 
    	use_device_amount
	FROM
		t_user AS u
	WHERE u.userid in 
	<foreach item="item" index="index" collection="array"
      open="(" separator="," close=")">
        #{item}
  	</foreach>
  </select>
  
  <update id="updateUseAmount" parameterType="list">
  	UPDATE t_user
		SET use_device_amount = use_device_amount - 1
	WHERE
		use_device_amount > 0
		AND userid in 
	<foreach item="item" index="index" collection="list"
    	open="(" separator="," close=")">
        #{item}
  	</foreach>
  </update>
  
</mapper>